// Generated by view binder compiler. Do not edit!
package com.example.fourthlab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fourthlab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PersonMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageView like;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView picture;

  @NonNull
  public final TextView sex;

  @NonNull
  public final TextView text;

  private PersonMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView date,
      @NonNull ImageView like, @NonNull TextView name, @NonNull ImageView picture,
      @NonNull TextView sex, @NonNull TextView text) {
    this.rootView = rootView;
    this.date = date;
    this.like = like;
    this.name = name;
    this.picture = picture;
    this.sex = sex;
    this.text = text;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PersonMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PersonMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.person_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PersonMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.like;
      ImageView like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.picture;
      ImageView picture = ViewBindings.findChildViewById(rootView, id);
      if (picture == null) {
        break missingId;
      }

      id = R.id.sex;
      TextView sex = ViewBindings.findChildViewById(rootView, id);
      if (sex == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      return new PersonMainBinding((ConstraintLayout) rootView, date, like, name, picture, sex,
          text);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
